{
  "name": "cubeb",
  "version": "0.2.0",
  "description": "This is a node.js native binding module to the cross-platform audio library [cubeb](https://github.com/kinetiknz/cubeb).",
  "license": "MIT",
  "keywords": [
    "c++",
    "audio",
    "cubeb",
    "mozilla"
  ],
  "author": {
    "name": "Jussi Kalliokoski",
    "email": "jussi.kalliokoski@gmail.com",
    "url": "http://www.avd.io"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jussi-kalliokoski/node-cubeb.git"
  },
  "directories": {
    "tests": "tests"
  },
  "engines": {
    "node": "0.10.x"
  },
  "main": "./build/Release/node-cubeb",
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# node-cubeb\n\nThis is a node.js native binding module to the cross-platform audio library [cubeb](https://github.com/kinetiknz/cubeb).\n\nThe purpose of this module is to allow you to write to the user's soundcard.\n\n## Installation\n\nYou need to install [cubeb](https://github.com/kinetiknz/cubeb) in order for node-cubeb to work. Refer to directions provided in cubeb on how to do that.\n\nIMPORTANT:\n\nIf you're on Linux, make sure that you [have ``` /usr/local/lib ``` in your library path](http://stackoverflow.com/questions/4743233/is-usr-local-lib-searched-for-shared-libraries).\n\nAfter installing cubeb, installing node-cubeb works like installing any other library in npm:\n\n```\n$ npm install cubeb\n```\n\n## Usage\n\ncubeb is quite a low level library, so that applies to node-cubeb as well. cubeb has two main concepts, contexts and streams. Ideally, you should use one context per program, while the context can have multiple streams. In order to setup a basic example of playing back pure noise, you would do as follows:\n\n```javascript\n\nvar CUBEB = require('cubeb')\n\nvar SAMPLE_FORMAT = CUBEB.SAMPLE_INT16LE\nvar CHANNEL_COUNT = 1\nvar SAMPLE_RATE = 44100\nvar BUFFER_SIZE = 4096\nvar PLAY_TIME = 4000\nvar LATENCY = 250\nvar CTX_NAME = \"my cubeb context\"\nvar STREAM_NAME = \"noisy stream\"\n\nfunction stateCallback (stateID) {\n\t/* here you can report the state */\n}\n\nfunction dataCallback (frameCount) {\n\t/* int16 is 2 bytes, doh */\n\tstream.write(new Buffer(frameCount * 2))\n\t/* releases used buffers */\n\tstream.release()\n\n\t/*\n\t note that we get the noise for free because\n\t node buffers aren't initialized to zero.\n\t*/\n}\n\nvar ctx = new CUBEB.Context(CTX_NAME)\nvar stream = new CUBEB.Stream(\n\tctx,\n\tSTREAM_NAME,\n\tSAMPLE_FORMAT,\n\tCHANNEL_COUNT,\n\tSAMPLE_RATE,\n\tBUFFER_SIZE,\n\tLATENCY,\n\tdatacb,\n\tstatecb\n)\n\nstream.start()\n\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jussi-kalliokoski/node-cubeb/issues"
  },
  "_id": "cubeb@0.2.0",
  "_from": "cubeb@0.2.x"
}
