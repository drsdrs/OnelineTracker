
Cookies helfen uns bei der Bereitstellung unserer Dienste. Durch die Nutzung unserer Dienste erklären Sie sich damit einverstanden, dass wir Cookies setzen.Mehr erfahrenOK
+Andreas



Drive
ERSTELLEN
Meine Ablage  
Chri Mappe
circuits
designs
Dnilabs
drawings
fotowand
gameAndEditor
css
js
levels
lib
sounds
onlinecoder-final
Publish!
tableCSV
textures
web
websites_backup_27.07.2013
wifi-kurs
Für mich freigegeben

Markiert

Zuletzt geöffnet

Papierkorb

Mehr 

0,47 GB (3 %) von 15 GB belegt
Verwalten
js


Meine AblagegameAndEditorjs
TITEL
EIGENTÜMER
ZULETZT GEÄNDERT
Dateimain.jsFreigegeben
ich
31.03.13‎ich
craftyFreigegeben
ich
31.03.13‎ich
main.jsÖffnen
//////// commom functions for crafty /////////
function round16(val) {
  return ((Math.round(val / Crafty.spritesize)) * Crafty.spritesize);
};

"use strict";
$(function () {
// "global" values ////
var tool = 'solid';
Crafty.toolList = ['solid', 'fragile', 'hazard', 'decoration', 'player', 'worker', 'enemy', 'projectile', 'bonus', 'upgrade', 'goal', 'enemy2', 'enemy3', 'enemy4'];
////////// MAIN FUNCTIONS //////////////////////////////

function newTable(rows, cols) {
  var tempHtml = '<table id="tableMap" cellspacing="0">';
  $('#map').empty();
  for (var y = 0; y < cols; y++) {
    tempHtml += '<tr>';
    for (var x = 0; x < rows; x++) {
      tempHtml += '<td>-</td>';
    }
    tempHtml += '</tr>';
  }
  tempHtml += '</table>';
  $('#map').append(tempHtml);
}

function loadToolBar() {
  var tempHtml = '<form>';
  var tools = Crafty.toolList.length;
  for (var y = 0; y < tools; y++) {
    tempHtml += '<label for="tool" ><div class="image ' + Crafty.toolList[y] + '"></div><input type="radio" name="tool" value="' + Crafty.toolList[y] + '" />' + Crafty.toolList[y] + '</label>';
  }
  tempHtml += '</form>';
  $('#toolDiv').append(tempHtml);
  $()
}

function setMap() {
  var width = $('#width').val();
  var height = $('#height').val();
  if (height && width) {
    newTable(height, width);
    initMouseEvents();
    Crafty.csv = '-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-';
//craftyInit(width,height,16);// +1 Horizontal line for status
//CraftyrenderMap(renderMapTo('csv'), function(levelData) {});
}
}

function clearMap() {
  $('#tableMap td').each(function () {
    $(this).removeClass().empty().html('-');
  });
}

function fillMap() {
  $('#tableMap td').each(function () {
    $(this).removeClass().empty().addClass(tool).html(tool);
  });
}

function renderMapTo(type, callback) {
  var table = '#tableMap';
  var csv = '';
  var tableRows = $(table + ' tr');
  $(tableRows).each(function () {
    $(this).children('td').each(function () {
      csv += $(this).html();
      csv += ',';
    });
    csv += "\n";
  });
  if (type === 'file') {
    csv = 'data:text/csv;charset=UTF-8,' + encodeURIComponent(csv);
    newWindow=window.open(csv, '*.csv');
  } else if (type === 'local'){
    level = $('#level').val();
    localStorage['ge0x29A_level'+level] = csv;
  }
  if(callback){callback();}
  return csv;
}

function loadFromLocal(callback){
  var csv = localStorage['ge0x29A_level' + ($('#level').val())];
  if(!csv){alert('No File saved!');
}else{fillTable(csv);}
callback();
return;
}

function hideShow_EditorGame(){
  $('.cr-stage').toggle();
  $('#tableDiv').toggle();
//$('#rightColl').toggle();
if($('.cr-stage').is(":visible")){
  Crafty.csv = renderMapTo('string');
//Crafty.scene("loading");
Crafty.scene("main");
}
}

function fillTable(data){
  var level = [];
// Split out each row and push em into the table
var tempHtml = '<table id="tableMap" cellspacing="0">';
$('#map').empty();
$.each(data.split("\n"), function (y, row) {
  var columns = row.split(",");
  level.push(columns);
  tempHtml += '<tr>';
// Then split out each column
$.each(columns, function (x, column) {
  if (column !== '') {
    tempHtml += '<td class="' + column + '">' + column + '</td>';
  }
});
tempHtml += '</tr>';
});
tempHtml += '</table>';
$('#map').append(tempHtml);
initMouseEvents();
}

///////////// INPUT-BUTTON EVENTS /////////////////////
function initButtonEvents() {
  $('#new').mousedown(function () {
    $('.lwSetter').removeClass('invisible');
  });
  $('#set').mousedown(function () {
    setMap();
    $('.lwSetter').addClass('invisible');
  });
  $('#clear').mousedown(function () {
    clearMap();
  });
  $('#save').mousedown(function () {
    var data = renderMapTo('file');
  });
  $('#loadLocal').mousedown(function () {
    loadFromLocal(function() {
      console.log('done loading');
      Crafty.stats.level = $('#level').val();
    }); 
  });
  $('#saveLocal').mousedown(function () {
    $('#loadMap').toggle();
    console.log('beginn saving');
    renderMapTo('local', function() {
      $('#loadMap').toggle();
      console.log('done saving');
    });
  });
  $('#fill').mousedown(function () {
    fillMap();
  });
  $('#start').mousedown(function () {
    hideShow_EditorGame();
  });
  $('#level').change(function(){
    if($('#level').val() > 20){$('#level').val(20)}
      else if($('#level').val() < 1){$('#level').val(1)}
    })
}

///////////// KEY EVENTS /////////////////////
$("body").keyup(function(e){
//console.log(e.keyCode);
if (e.keyCode == 32){
  hideShow_EditorGame()
} else if (e.keyCode == 83){
  renderMapTo('local');
}
});

////////////// MAP/TABLE EVENTS /////////////////////
function initMouseEvents() {
  var mouseHold = 'nothing';
  $("#tableDiv table td").mouseenter(function () {
    if (mouseHold === 'leftClicked') {
// set class and value of table
$(this).removeClass().addClass(tool).html(tool);
}
}).mouseleave(function () {
  if (mouseHold === 'rightClicked') {
    $(this).removeClass().html('-');
  }
}).mousedown(function (e) {
if (e.button !== 2) { //left button
// set class and value of table
$(this).removeClass().empty().addClass(tool).html(tool);
mouseHold = 'leftClicked';
return false;
} else { //right button
  $(this).removeClass().html('-');
  mouseHold = 'rightClicked';
  return true;
}
});
$(window).mouseup(function () {
  mouseHold = 'nothing';
});
}
//////////// INIT TOOLBAR EVENTS /////////////////
function initToolEvents() {
  $('#toolDiv label').mousedown(function () {
    $(this).find('input').attr('checked', !$(this).find('input').attr('checked'));
    $(this).find('input').each(function () {
      $('label').removeClass('checked');
    });
    $(this).addClass('checked');
    tool = $(this).find('input').attr('value');
  });
  $('#toolDiv label:first-child').addClass('checked');
}
// prevent right mouseclick menue
$(document)[0].oncontextmenu = function () {
//return false;
};

//////////// FILE HANDLER //////////////

function handleFileSelect(evt) {
  var f = evt.target.files[0];
  //if (f.type.match('csv.*')) {
    var reader = new FileReader();
  // close newTable width/heigth input boxes
  $('.lwSetter').addClass('invisible');
  // Closure to capture the file information.
  reader.onload = (function (theFile) {
    return function (e) {
      fillTable(e.target.result);
    };
  })(f);
  reader.readAsText(f);
  //} else {
  //  console.log('file type error, only .csv files work');
  //}
}

///// INIT /////
loadToolBar();
initToolEvents();
newTable(30, 20);
var csv = localStorage['ge0x29A_level1'];
if(!csv){
  $.get("levels/level1.csv", function(data) {
    fillTable(data);
  });
} else {fillTable(csv);}
initMouseEvents();
initButtonEvents();
craftyInit(30,20,16);
loadStats();
document.getElementById('files').addEventListener('change', handleFileSelect, false);
});
"main.js" wird angezeigt.